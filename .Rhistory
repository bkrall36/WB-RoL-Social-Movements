# OLS with TWFE + 'count' control variable
reg_pmln4 <- lm(Vote_Share.1 ~ treated + year_dummy + constituency_dummy + count, data = df_pml_n)
# cluster-robust SEs for reg_pmln4
cl.cov.pmln4 <- cluster.vcov(reg_pmln4, df_pml_n$`PA ID`)
cl.robust.se.pmln4 <- sqrt(diag(cl.cov.pmln4))
## PPP
# OLS with TWFE
reg_pppp3 <- lm(Vote_Share.1 ~ treated + year_dummy + constituency_dummy, data = df_pppp)
# cluster-robust SEs for reg_pppp3
cl.cov.pppp3 <- cluster.vcov(reg_pppp3, df_pppp$`PA ID`)
cl.robust.se.pppp3 <- sqrt(diag(cl.cov.pppp3))
# OLS with TWFE + 'count' control variable
reg_pppp4 <- lm(Vote_Share.1 ~ treated + year_dummy + constituency_dummy + count, data = df_pppp)
# cluster-robust SEs for reg_pppp4
cl.cov.pppp4 <- cluster.vcov(reg_pppp4, df_pppp$`PA ID`)
cl.robust.se.pppp4 <- sqrt(diag(cl.cov.pppp4))
# Create Opposition (PML-N and PPP) Regression Table
table03_DiDregressionOpp <- stargazer(reg_pmln3,reg_pmln4,reg_pppp3,reg_pppp4, type="text", title="Effect of CJ visits on vote share for the Opposition (PML-N & PPP)", keep = c('Constant','treated', 'count', 'year_dummy2008'), order=c('Constant','treated'), covariate.labels=c('Unvisited Districts', 'Visited Districts', 'Year Dummy (2008)', 'Controls'), column.labels=c('PML-N: TWFE', 'PML-N: TWFE w/ Controls', 'PPP: TWFE', 'PPP: TWFE w/ Controls'), dep.var.caption = '% of Vote Share', dep.var.labels.include = FALSE, se = list(cl.robust.se.pmln3, cl.robust.se.pmln4, cl.robust.se.pppp3, cl.robust.se.pppp4), notes = c("Robust standard errors appear in brackets (clustered at the district level).",  "The table presents DiD estimation of the effect of Chief Justice visits to districts of", "Pakistan before 2008 elections on the share of votes in favour of opposition parties in 2008", "provincial and national elections (compare to 2002 elections). Outcome variable is visit to a",  "given district. Controls include: # of candidates in a district (count)."), notes.align = "l")
df_02_08_bargraphs <- df_02_08 %>%
# Filter for specific political parties of interest
filter(`Party Initials` %in% c('PML', 'PML-N', 'PPPP')) %>%
# Calculate summary statistics used to build confidence intervals
group_by(`Party Initials`, Year, `Treated before 2008 elections`) %>%
summarise(
n=n(),
mean=mean(Vote_Share.1),
sd=sd(Vote_Share.1)) %>%
mutate(se=sd/sqrt(n),
ic=(se * qt((1-0.05)/2 + .5, n-1))) %>%
# Rename column name and binary variable dummys to characters
rename(group = 'Treated before 2008 elections')
df_02_08_bargraphs$group <- ifelse(df_02_08_bargraphs$group == 1, 'Visited', 'Never Visited')
# Subset data for PML
pml_bar <- df_02_08_bargraphs %>%
filter(`Party Initials` == 'PML')
# Create bar chart for PML
fig01_bargraphPML <- ggplot(data = pml_bar, aes(x=factor(Year), y=mean, groups=group, fill=group)) +
geom_bar(colour='black', width=0.50, stat='identity', position=position_dodge(0.5)) +
geom_errorbar(aes(x=factor(Year), ymin=mean-ic, ymax=mean+ic), width=0.25, colour="#778899", alpha=1, size=1, position=position_dodge(0.5)) +
ggtitle('Impact of CJ visits on General Musharrafâ€™s Party - PML') +
labs(y= "Vote Share (%)", x = '') +
theme_light() +
theme(legend.position="bottom", legend.title=element_blank(), plot.title = element_text(hjust = 0.5)) +
scale_fill_manual("group", values = c("Visited" = "#2F4F4F", "Never Visited" = "#DCDCDC"))
print(fig01_bargraphPML)
# Note: The figure presents the effect of Chief Justice visits to districts of Pakistan
# before 2008 elections on the share of votes in # favor of the PML party in 2008
# provincial and national elections (compared to 2002 elections). The vertical lines
# reflect the 95% confidence intervals.
# Summarize and save as a table to graph
pml_table <- df_02_08 %>%
filter((Year == 2002 | 2008), `Party Initials` == 'PML') %>%
group_by(Year,`Treated before 2008 elections`) %>%
summarize(
'Percentage of Vote Share' = mean(Vote_Share.1)
)
# Reshape the table to wide format
pml_table <- spread(pml_table, key = "Treated before 2008 elections", value = 'Percentage of Vote Share')
# Transpose the table, remove the first row, and save as df object
pml_table <- t(pml_table)
pml_table <- pml_table[-1,]
pml_table <- as.data.frame(pml_table)
# Create a difference column
pml_table <- pml_table %>%
mutate(
Difference = pml_table$V2 - pml_table$V1
)
# Rename columns and rows
colnames(pml_table) <- c(2002, 2008, 'Difference')
rownames(pml_table) <- c("Unvisited Districts", "Visited Districts")
print(pml_table)
# Subset data for PML
pmln_bar <- df_02_08_bargraphs %>%
filter(`Party Initials` == 'PML-N')
# Create bar chart for PML
fig02_bargraphPMLN <- ggplot(data = pmln_bar, aes(x=factor(Year), y=mean, groups=group, fill=group)) +
geom_bar(colour='black', width=0.50, stat='identity', position=position_dodge(0.5)) +
geom_errorbar(aes(x=factor(Year), ymin=mean-ic, ymax=mean+ic), width=0.25, colour="#778899", alpha=1, size=1, position=position_dodge(0.5)) +
ggtitle('Impact of CJ visits on Party Pledging Support for Lawyers Movment - PML-N') +
labs(y= "Vote Share (%)", x = '') +
theme_light() +
theme(legend.position="bottom", legend.title=element_blank(), plot.title = element_text(hjust = 0.5)) +
scale_fill_manual("group", values = c("Visited" = "#2F4F4F", "Never Visited" = "#DCDCDC"))
print(fig02_bargraphPMLN)
# Note: The figure presents the effect of Chief Justice visits to districts of Pakistan
# before 2008 elections on the share of votes in # favor of PML-N party in 2008
# provincial and national elections (compare to 2002 elections). The vertical lines
# reflect the 95% confidence intervals.
pmln_table <- df_02_08 %>%
filter((Year == 2002 | 2008), `Party Initials` == 'PML-N') %>%
group_by(Year,`Treated before 2008 elections`) %>%
summarize(
'Percentage of Vote Share' = mean(Vote_Share.1)
)
# Reshape the table to wide format
pmln_table <- spread(pmln_table, key = "Treated before 2008 elections", value = 'Percentage of Vote Share')
# Transpose the table, remove the first row, and save as df object
pmln_table <- t(pmln_table)
pmln_table <- pmln_table[-1,]
pmln_table <- as.data.frame(pmln_table)
# Create a difference column
pmln_table <- pmln_table %>%
mutate(
Difference = pmln_table$V2 - pmln_table$V1
)
# Rename columns and rows
colnames(pmln_table) <- c(2002, 2008, 'Difference')
rownames(pmln_table) <- c("Unvisited Districts", "Visited Districts")
print(pmln_table)
# Subset data for PML
pppp_bar <- df_02_08_bargraphs %>%
filter(`Party Initials` == 'PPPP')
# Create bar chart for PML
fig03_bargraphPPP <- ggplot(data = pppp_bar, aes(x=factor(Year), y=mean, groups=group, fill=group)) +
geom_bar(colour='black', width=0.50, stat='identity', position=position_dodge(0.5)) +
geom_errorbar(aes(x=factor(Year), ymin=mean-ic, ymax=mean+ic), width=0.25, colour="#778899", alpha=1, size=1, position=position_dodge(0.5)) +
ggtitle('Impact of CJ visits on Nuetral Opposition Party - PPP') +
labs(y= "Vote Share (%)", x = '') +
theme_light() +
theme(legend.position="bottom", legend.title=element_blank(), plot.title = element_text(hjust = 0.5)) +
scale_fill_manual("group", values = c("Visited" = "#2F4F4F", "Never Visited" = "#DCDCDC"))
print(fig03_bargraphPPP)
# Note: The figure presents the effect of Chief Justice visits to districts of Pakistan
# before 2008 elections on the share of votes in # favor of PPP party in 2008 provincial
# and national elections (compared to 2002 elections). The vertical lines reflect the
# 95% confidence intervals.
pppp_table <- df_02_08 %>%
filter((Year == 2002 | 2008), `Party Initials` == 'PPPP') %>%
group_by(Year,`Treated before 2008 elections`) %>%
summarize(
'Percentage of Vote Share' = mean(Vote_Share.1)
)
# Reshape the table to wide format
pppp_table <- spread(pppp_table, key = "Treated before 2008 elections", value = 'Percentage of Vote Share')
# Transpose the table, remove the first row, and save as df object
pppp_table <- t(pppp_table)
pppp_table <- pppp_table[-1,]
pppp_table <- as.data.frame(pppp_table)
# Create a difference column
pppp_table <- pppp_table %>%
mutate(
Difference = pppp_table$V2 - pppp_table$V1
)
# Rename columns and rows
colnames(pppp_table) <- c(2002, 2008, 'Difference')
rownames(pppp_table) <- c("Unvisited Districts", "Visited Districts")
print(pppp_table)
# Subset data for ease of manipulation
df_subset <- df %>% select(c(Year, Vote_Share.1, 'Party Initials', treated))
# Rename for clarity
df_subset <- df_subset %>%
mutate(
treated = ifelse(treated == 1, 'Visited', 'Never Visted')
)
# Parallel Trend for PML
df_subset %>%
filter(`Party Initials` == 'PML') %>%
ggplot(aes(x = Year, y = Vote_Share.1, color = treated)) +
stat_summary(fun.y = mean, geom = 'line', size = 1.25) +
theme_bw() +
labs(x = "Year", y = "% of Vote Share", title = "Evolution of Vote Share - PML (Years 1970 to 2012)") +
geom_vline(xintercept = 2007) +
scale_color_manual('Treated', values = c("Visited" = "#2F4F4F", "Never Visited" = "#DCDCDC")) +
theme(legend.position="bottom", legend.title=element_blank(), plot.title = element_text(hjust = 0.5))
# Parallel Trend for PML-N
df_subset %>%
filter(`Party Initials` == 'PML-N') %>%
ggplot(aes(x = Year, y = Vote_Share.1, color = treated)) +
stat_summary(fun.y = mean, geom = 'line', size = 1.25) +
theme_bw() +
labs(x = "Year", y = "% of Vote Share", title = "Evolution of Vote Share - PML-N (Years 1992 to 2012)") +
geom_vline(xintercept = 2007) +
scale_color_manual('Treated', values = c("Visited" = "#2F4F4F", "Never Visited" = "#DCDCDC")) +
theme(legend.position="bottom", legend.title=element_blank(), plot.title = element_text(hjust = 0.5))
# Parallel Trend for PPPP
df_subset %>%
filter(`Party Initials` == 'PPPP') %>%
ggplot(aes(x = Year, y = Vote_Share.1, color = treated)) +
stat_summary(fun.y = mean, geom = 'line', size = 1.25) +
theme_bw() +
labs(x = "Year", y = "% of Vote Share", title = "Evolution of Vote Share - PPP (Years 2002 to 2012)") +
geom_vline(xintercept = 2007) +
scale_color_manual('Treated', values = c("Visited" = "#2F4F4F", "Never Visited" = "#DCDCDC")) +
theme(legend.position="bottom", legend.title=element_blank(), plot.title = element_text(hjust = 0.5))
# Construct a variable that, for treated units, will take the value of the
# number of years leading up to it (+3,-3). For untreated units, or treated
# units that will be treated 3 or more years in the future,it takes the value -4
df$time_since_treatment = ifelse(!is.na(df$`1st_visit_year`) & (df$Year-df$`1st_visit_year`>=-3) & (df$Year-df$`1st_visit_year`<=3),df$Year-df$`1st_visit_year`,-4)
# For treated units, after 3 years, this variable will have the value 4
df$time_since_treatment = ifelse(!is.na(df$`1st_visit_year`) & (df$Year-df$`1st_visit_year`>3),4,df$time_since_treatment)
event_study_reg <- lm(Vote_Share.1 ~ factor(time_since_treatment) + constituency_dummy + year_dummy + count, data = df)
# cluster-robust SEs for event study
cl.cov.event <- cluster.vcov(event_study_reg, df$`PA ID`)
cl.robust.se.event <- sqrt(diag(cl.cov.event))
table04_eventstudy <- stargazer(event_study_reg, type="text", keep=c("Constant","time_since_treatment"), se = list(cl.robust.se.event), notes = c("Robust standard errors appear in brackets (clustered at the district level)."), notes.align = "l")
# Store the beta coefficients as X and Y pairs for plotting
summary <- as.data.frame(event_study_reg$coefficients)
y <- as.data.frame(summary[2:4,])
x <- as.data.frame(c(-1, 0, 1))
# Generate CI at 95% level for time_since_treatment variable
cis <- confint(event_study_reg, level=0.95)
cis <- cis[2:4, ]
# Create dataframe for plotting
combined_df <- cbind(x, y, cis)
fig04_eventstudy <- ggplot(combined_df, aes(x=`c(-1, 0, 1)`, y=`summary[2:4, ]`)) +
geom_pointrange(aes(ymin=`2.5 %`, ymax=`97.5 %`)) +
labs(x='Time to Treatment (years)', y='Effect Size (pp of Vote Share)', title='Average Treatment Effect of CJ Visit') +
geom_line() +
theme_bw() +
theme(plot.title = element_text(hjust = 0.5))
print(fig04_eventstudy)
git config --global user.email "brendonkrall@gmail.com"
git config --global user.name "Brendon"
git config --global user.email "brendonkrall@gmail.com"
df[treated == 1]
df <- read_excel(paste0(Inputs, "Elections_Final_10.08.xlsx"), sheet = 1)
# Prepare Linear Regression Model Terms and Dummy Variables
# Create Year Fixed-Effect Variable
df$year_dummy <- factor(df$Year)
# Create Constituency Fixed-Effect Variable
df$constituency_dummy <- factor(df$`PA ID`)
# Create Treated 2008 and 2013 variable
df <- df %>% mutate(
treated = ifelse((`Treated before 2008 elections` == 1), 1, 0)
)
# Create Visits 2008 and 2013 variable Counts
#df <- df %>% mutate(
#  treated_2008_n = ifelse((Year == 2008 & Treated == 1), 'Visits before 2008 elections', 0),
#  treated_2013_n = ifelse((Year == 2013 & Treated == 1), 'N_visits', 0)
#)
# Remove observations with NA values for our outcome variable
df <- df %>% filter(!is.na(Vote_Share))
# Store Clean Data
write_csv(df, paste0(
Outputs, "clean_elections_data.csv"))
df[treated == 1]
df[[treated == 1]]
df$names <- (df$`Treated before 2008 elections`== 1)
View(df)
df <- read_excel(paste0(Inputs, "Elections_Final_10.08.xlsx"), sheet = 1)
# Prepare Linear Regression Model Terms and Dummy Variables
# Create Year Fixed-Effect Variable
df$year_dummy <- factor(df$Year)
# Create Constituency Fixed-Effect Variable
df$constituency_dummy <- factor(df$`PA ID`)
# Create Treated 2008 and 2013 variable
df <- df %>% mutate(
treated = ifelse((`Treated before 2008 elections` == 1), 1, 0)
)
# Create Visits 2008 and 2013 variable Counts
#df <- df %>% mutate(
#  treated_2008_n = ifelse((Year == 2008 & Treated == 1), 'Visits before 2008 elections', 0),
#  treated_2013_n = ifelse((Year == 2013 & Treated == 1), 'N_visits', 0)
#)
# Remove observations with NA values for our outcome variable
df <- df %>% filter(!is.na(Vote_Share))
# Store Clean Data
write_csv(df, paste0(
Outputs, "clean_elections_data.csv"))
new_df <- (df$`Treated before 2008 elections` == 1)
new_df <- df %>% filter('Treated before 2008 elections' == 1)
View(new_df)
df <- read_excel(paste0(Inputs, "Elections_Final_10.08.xlsx"), sheet = 1)
# Prepare Linear Regression Model Terms and Dummy Variables
# Create Year Fixed-Effect Variable
df$year_dummy <- factor(df$Year)
# Create Constituency Fixed-Effect Variable
df$constituency_dummy <- factor(df$`PA ID`)
# Create Treated 2008 and 2013 variable
df <- df %>% mutate(
treated = ifelse((`Treated before 2008 elections` == 1), 1, 0)
)
# Create Visits 2008 and 2013 variable Counts
#df <- df %>% mutate(
#  treated_2008_n = ifelse((Year == 2008 & Treated == 1), 'Visits before 2008 elections', 0),
#  treated_2013_n = ifelse((Year == 2013 & Treated == 1), 'N_visits', 0)
#)
# Remove observations with NA values for our outcome variable
df <- df %>% filter(!is.na(Vote_Share))
# Store Clean Data
write_csv(df, paste0(
Outputs, "clean_elections_data.csv"))
new_df <- df %>% filter('Treated before 2008 elections' == 1)
new_df <- df %>% filter(df$`Treated before 2008 elections` == 1)
View(new_df)
new_df.District_Election_data.unique()
new_df.District_Election_data.unique
new_df[.District_Election_data].unique
new_df[District_Election_data].unique
new_df[District_Election_data].unique()
new_df[[District_Election_data]].unique()
new_df[[District_Election_data]]
new_df[District_Election_data]
new_df['District_Election_data']
new_df['District_Election_data'].unique()
new_df['District_Election_data'].unique()
new_df['District_Election_data'].unique
districts <- new_df['District_Election_data']
districts.unique()
districts
districts.drop_duplicates(keep=False)
new_df <- df %>% filter(df$`Treated before 2008 elections` == 1)
districts <- new_df['District_Election_data']
districts.drop_duplicates(keep=False)
districts %>% unique()
View(new_df)
df <- read_excel(paste0(Inputs, "Elections_Final_10.08.xlsx"), sheet = 1)
# Prepare Linear Regression Model Terms and Dummy Variables
# Create Year Fixed-Effect Variable
df$year_dummy <- factor(df$Year)
# Create Constituency Fixed-Effect Variable
df$constituency_dummy <- factor(df$`PA ID`)
# Create Treated 2008 and 2013 variable
df <- df %>% mutate(
treated = ifelse((`Treated before 2008 elections` == 1), 1, 0)
)
# Create Visits 2008 and 2013 variable Counts
#df <- df %>% mutate(
#  treated_2008_n = ifelse((Year == 2008 & Treated == 1), 'Visits before 2008 elections', 0),
#  treated_2013_n = ifelse((Year == 2013 & Treated == 1), 'N_visits', 0)
#)
# Remove observations with NA values for our outcome variable
df <- df %>% filter(!is.na(Vote_Share))
# Store Clean Data
write_csv(df, paste0(
Outputs, "clean_elections_data.csv"))
unique()
df %>%
filter(treated == 1) %>%
select('District_Election_data') %>%
unique()
df %>%
filter(treated == 1) %>%
select('districts') %>%
unique()
# Import Data
pslmdf <- read_excel(paste0(Inputs, "PSLM Data.xlsx"), sheet = 1)
# Subset first three rows and remove them from dataframe
pslmdf_first3 <- pslmdf[, 1:3]
pslmdf <- pslmdf[, -c(1:3)]
# Store column names and then store columns with names
cnames <- colnames(pslmdf)
cnames <- cnames[seq(1, length(cnames), 9)]
# Remove row of metadata
pslmdf_first3 <- pslmdf_first3[-1,]
pslmdf <- pslmdf[-1,]
# Select column observations with totals only
pslmdf <- pslmdf[seq_len(ncol(pslmdf)) %% 9 == 0]
# Rename total columns manually and using stored column names
colnames(pslmdf_first3) <- c('year', 'province_id', 'name')
colnames(pslmdf) <- cnames
# Add first three rows back
clean_pslm_data <- cbind(pslmdf_first3, pslmdf)
# Store Clean Data
write_csv(clean_pslm_data, paste0(
Outputs, "clean_pslm_data.csv"))
# Grouping Data by Treatment Status
# Create a list that contains districts that were visited by chief justice in 2007
treated_districts <- c('Islamabad', 'Rawalpindi', 'Sukkur', 'Hyderabad', 'Peshawar', 'Lahore', 'Abbottabad', 'Faisalabad', 'Multan')
# Create a treated dummy column
clean_pslm_data <- clean_pslm_data %>%
mutate(
treated = ifelse(name %in% treated_districts, 1, 0)
)
# Subset the data for the control groups
pslmdf_control <- clean_pslm_data %>%
filter(treated == 0)
# Subset the data for the treatment groups
pslmdf_treated <- clean_pslm_data %>%
filter(treated == 1)
# De-identify districts
pslmdf_treated <- pslmdf_treated[, -c(1:3)]
pslmdf_control <- pslmdf_control[, -c(1:3)]
# Ensure datatype of columns are numeric
pslmdf_treated[] <- sapply(pslmdf_treated, as.numeric)
pslmdf_control[] <- sapply(pslmdf_control, as.numeric)
# Compute aggregate measures for balance table
control_means <- as.data.frame(colMeans(pslmdf_control))
treated_means <- as.data.frame(colMeans(pslmdf_treated))
# Combine measures and remove unnecessary row observations
means_df <- cbind(control_means, treated_means)
means_df <- means_df %>% filter(row_number() <= n()-4)
# Create p-value vector to store values from for loop
pval <- c()
# Calculate the p-values baseline differences in means using for loop
for (i in 1:24){
pval[i] <- t.test(pslmdf_control[,i], pslmdf_treated[,i],
alternative = 'two.sided',
var.equal = FALSE)$p.val
}
# Create balance table, add significance, and rename columns
balance_tbl <- cbind(means_df, pval)
balance_tbl <- balance_tbl %>%
mutate(
'Significance Level' = case_when(
pval <= 0.01 ~ "***",
pval <= 0.05 ~ "**",
pval <= 0.1 ~ "*",
pval > 0.1 ~ ""
)
)
colnames(balance_tbl) <- c("Univisited District Means", "Visited District Means", "P-Value", "Significance Level")
# Save balance table
table01_balance <- balance_tbl
print(table01_balance)
table01_balance
view(table01_balance)
# Grouping Data by Treatment Status
# Create a list that contains districts that were visited by chief justice in 2007
treated_districts <- c('Islamabad', 'Rawalpindi', 'Sukkur', 'Hyderabad', 'Peshawar', 'Lahore', 'Abbottabad', 'Faisalabad', 'Multan')
# Create a treated dummy column
clean_pslm_data <- clean_pslm_data %>%
mutate(
treated = ifelse(name %in% treated_districts, 1, 0)
)
# Subset the data for the control groups
pslmdf_control <- clean_pslm_data %>%
filter(treated == 0)
# Subset the data for the treatment groups
pslmdf_treated <- clean_pslm_data %>%
filter(treated == 1)
# De-identify districts
pslmdf_treated <- pslmdf_treated[, -c(1:3)]
pslmdf_control <- pslmdf_control[, -c(1:3)]
# Ensure datatype of columns are numeric
pslmdf_treated[] <- sapply(pslmdf_treated, as.numeric)
pslmdf_control[] <- sapply(pslmdf_control, as.numeric)
# Compute aggregate measures for balance table
control_means <- as.data.frame(colMeans(pslmdf_control))
treated_means <- as.data.frame(colMeans(pslmdf_treated))
# Combine measures and remove unnecessary row observations
means_df <- cbind(control_means, treated_means)
means_df <- means_df %>% filter(row_number() <= n()-4)
# Create p-value vector to store values from for loop
pval <- c()
# Calculate the p-values baseline differences in means using for loop
for (i in 1:24){
pval[i] <- t.test(pslmdf_control[,i], pslmdf_treated[,i],
alternative = 'two.sided',
var.equal = FALSE)$p.val
}
# Create balance table, add significance, and rename columns
balance_tbl <- cbind(means_df, pval)
balance_tbl <- balance_tbl %>%
mutate(
'Significance Level' = case_when(
pval <= 0.01 ~ "***",
pval <= 0.05 ~ "**",
pval <= 0.1 ~ "*",
pval > 0.1 ~ ""
)
)
colnames(balance_tbl) <- c("Univisited District Means", "Visited District Means", "P-Value", "Significance Level")
# Save balance table
table01_balance <- balance_tbl
print(table01_balance)
View(pslmdf_treated)
# Save balance table
balance_tbl
# Save balance table
table01_balance <- table(balance_tbl)
print(table01_balance)
# Grouping Data by Treatment Status
# Create a list that contains districts that were visited by chief justice in 2007
treated_districts <- c('Islamabad', 'Rawalpindi', 'Sukkur', 'Hyderabad', 'Peshawar', 'Lahore', 'Abbottabad', 'Faisalabad', 'Multan')
# Create a treated dummy column
clean_pslm_data <- clean_pslm_data %>%
mutate(
treated = ifelse(name %in% treated_districts, 1, 0)
)
# Subset the data for the control groups
pslmdf_control <- clean_pslm_data %>%
filter(treated == 0)
# Subset the data for the treatment groups
pslmdf_treated <- clean_pslm_data %>%
filter(treated == 1)
# De-identify districts
pslmdf_treated <- pslmdf_treated[, -c(1:3)]
pslmdf_control <- pslmdf_control[, -c(1:3)]
# Ensure datatype of columns are numeric
pslmdf_treated[] <- sapply(pslmdf_treated, as.numeric)
pslmdf_control[] <- sapply(pslmdf_control, as.numeric)
# Compute aggregate measures for balance table
control_means <- as.data.frame(colMeans(pslmdf_control))
treated_means <- as.data.frame(colMeans(pslmdf_treated))
# Combine measures and remove unnecessary row observations
means_df <- cbind(control_means, treated_means)
means_df <- means_df %>% filter(row_number() <= n()-4)
# Create p-value vector to store values from for loop
pval <- c()
# Calculate the p-values baseline differences in means using for loop
for (i in 1:24){
pval[i] <- t.test(pslmdf_control[,i], pslmdf_treated[,i],
alternative = 'two.sided',
var.equal = FALSE)$p.val
}
# Create balance table, add significance, and rename columns
balance_tbl <- cbind(means_df, pval)
balance_tbl <- balance_tbl %>%
mutate(
'Significance Level' = case_when(
pval <= 0.01 ~ "***",
pval <= 0.05 ~ "**",
pval <= 0.1 ~ "*",
pval > 0.1 ~ ""
)
)
colnames(balance_tbl) <- c("Univisited District Means", "Visited District Means", "P-Value", "Significance Level")
# Save balance table
table01_balance <- table(balance_tbl)
View(balance_tbl)
View(clean_pslm_data)
